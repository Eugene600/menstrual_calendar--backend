services:
  db:
    image: mysql:latest  
    container_name: menstrual_calendar_data  
    environment:
      MYSQL_ROOT_PASSWORD: ${DATABASE_PASSWORD}
      MYSQL_DATABASE: ${DATABASE_NAME}
      MYSQL_USER: ${DATABASE_USER}
      MYSQL_PASSWORD: ${DATABASE_PASSWORD}
    volumes:
      - /home/eugene/menstrual_calendar/eugene/0e9f466d90d8017389a2f62841e846639a4a77e4f7e156dadc513b1dd536b07b/_data:/var/lib/mysql  
    ports:
      - "3307:3306"  
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "${DATABASE_USER}", "-p${DATABASE_PASSWORD}"]
      interval: 5s
      timeout: 10s
      retries: 5
    networks:
      - app_network  

  # Django REST Framework Backend Service
  backend:
    image: eugenewachira17/menstrual_calendar:latest
    container_name: menstrual-calendar_backend  
    environment:
      DB_HOST: db  
      DB_NAME: ${DATABASE_NAME} 
      DB_USER: ${DATABASE_USER}
      DB_PASSWORD: ${DATABASE_PASSWORD}
      DB_PORT: ${DATABASE_PORT}
    ports:
      - "8000:8000"  
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app_network  # Connect to the custom network
    volumes:
      - .:/app  # Mount the current directory to /app in the container

# Define a custom network for communication between services
networks:
  app_network:
    driver: bridge


 